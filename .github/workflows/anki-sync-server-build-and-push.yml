name: Build and Push on Upstream Release

on:
  schedule:
    - cron: '0 */6 * * *' # 每6小时检查一次
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 1. 获取上游仓库最新 release 信息
      - name: Check latest release from upstream
        id: get_release
        run: |
          repo="ankitects/anki"
          api_url="https://api.github.com/repos/${repo}/releases/latest"
          release_info=$(curl -s $api_url)
          tag_name=$(echo $release_info | jq -r .tag_name)
          asset_url="https://raw.githubusercontent.com/${repo}/main/docs/syncserver/Dockerfile.distroless"
          echo "tag_name=${tag_name}" >> $GITHUB_OUTPUT
          echo "asset_url=${asset_url}" >> $GITHUB_OUTPUT

      # 2. 检查 Docker Hub 是否已有该 tag
      - name: Check if image already exists on Docker Hub
        id: check_image
        run: |
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/anki-sync-server"
          TAG="${{ steps.get_release.outputs.tag_name }}"
          CODE=$(curl -s -o /dev/null -w "%{http_code}" "https://hub.docker.com/v2/namespaces/${IMAGE_NAME}/repositories/anki-sync-server/tags/${TAG}")
          if [ "$CODE" = "200" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      # 3. 如果已存在，跳过后续步骤
      - name: Stop if image exists
        if: steps.check_image.outputs.exists == 'true'
        run: |
          echo "当前版本镜像已经存在，跳过构建"
          exit 0

      # 4. 下载 release 文件
      - name: Download file from release
        run: |
          curl -L "${{ steps.get_release.outputs.asset_url }}" -o ./Dockerfile.distroless

      # 5. 登录 Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6. 构建 Docker 镜像
      - name: Build Docker image
        run: |
          docker build -f Dockerfile.distroless --no-cache --build-arg ANKI_VERSION=${{ steps.get_release.outputs.tag_name }} -t ${{ secrets.DOCKERHUB_USERNAME }}/anki-sync-server:${{ steps.get_release.outputs.tag_name }} .

      # 7. 推送镜像到 Docker Hub
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/anki-sync-server:${{ steps.get_release.outputs.tag_name }}