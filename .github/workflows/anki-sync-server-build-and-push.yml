name: 构建和推送anki-sync-server docker镜像

on:
  schedule:
    - cron: '0 20 * * *'
  workflow_dispatch:

jobs:
  check-image:
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.check_image.outputs.exists }}
      tag_name: ${{ steps.get_release.outputs.tag_name }}
      asset_url: ${{ steps.get_release.outputs.asset_url }}
    steps:
      - name: 获取ankitects/ankif最新发行版tag
        id: get_release
        run: |
          repo="ankitects/anki"
          api_url="https://api.github.com/repos/${repo}/releases/latest"
          release_info=$(curl -s $api_url)
          tag_name=$(echo $release_info | jq -r .tag_name)
          asset_url="https://raw.githubusercontent.com/${repo}/main/docs/syncserver/Dockerfile.distroless"
          echo "tag_name=${tag_name}" >> $GITHUB_OUTPUT
          echo "asset_url=${asset_url}" >> $GITHUB_OUTPUT

      - name: 检查docker hub中是否存在该发行版
        id: check_image
        run: |
          TAG="${{ steps.get_release.outputs.tag_name }}"
          CODE=$(curl -s -o /dev/null -w "%{http_code}" "https://hub.docker.com/v2/namespaces/${{ secrets.DOCKERHUB_USERNAME }}/repositories/anki-sync-server/tags/${TAG}")
          if [ "$CODE" = "200" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: 检查结果
        run: |
          echo "镜像是否存在: ${{ steps.check_image.outputs.exists }}"
          echo "tag: ${{ steps.get_release.outputs.tag_name }}"

  build-and-push:
    needs: check-image
    if: needs.check-image.outputs.exists != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 下载docker镜像构建文件
        run: |
          curl -L "${{ needs.check-image.outputs.asset_url }}" -o ./Dockerfile.distroless

      - name: 登录 Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: 清除 DOCKER_CONFIG 环境变量
        run: unset DOCKER_CONFIG
          
      - name: 登录 阿里云容器镜像服务
        uses: aliyun/acr-login@v1
        with:
          login-server: ${{ secrets.ALIYUN_ACR_REGISTRY }}
          username: ${{ secrets.ALIYUN_ACR_USERNAME }}
          password: ${{ secrets.ALIYUN_ACR_PASSWORD }}

      - name: 构建镜像（带版本号）
        run: |
          docker build -f Dockerfile.distroless --no-cache --build-arg ANKI_VERSION=${{ needs.check-image.outputs.tag_name }} -t ${{ secrets.DOCKERHUB_USERNAME }}/anki-sync-server:${{ needs.check-image.outputs.tag_name }} .
          
      - name: 标记一个最新版本（latest）和阿里云带版本号版本
        run: |
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/anki-sync-server:${{ needs.check-image.outputs.tag_name }} ${{ secrets.DOCKERHUB_USERNAME }}/anki-sync-server:latest
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/anki-sync-server:${{ needs.check-image.outputs.tag_name }} ${{ secrets.ALIYUN_ACR_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/anki-sync-server:latest
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/anki-sync-server:${{ needs.check-image.outputs.tag_name }} ${{ secrets.ALIYUN_ACR_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/anki-sync-server:${{ needs.check-image.outputs.tag_name }}

      - name: 推送镜像（带版本号）
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/anki-sync-server:${{ needs.check-image.outputs.tag_name }}
          docker push ${{ secrets.ALIYUN_ACR_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/anki-sync-server:${{ needs.check-image.outputs.tag_name }}
          
      - name: 推送镜像 (latest)
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/anki-sync-server:latest
          docker push ${{ secrets.ALIYUN_ACR_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/anki-sync-server:latest